<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN""http://www.w3.org/TR/REC-html40/loose.dtd">
<!--NewPage-->
<HTML>
<HEAD>
<!-- Generated by javadoc on Wed Jun 23 14:21:35 EDT 2004 -->
<TITLE>
KDTree
</TITLE>
<META NAME="keywords" CONTENT="edu.wlu.cs.levy.CG.KDTree,KDTree class">
<LINK REL ="stylesheet" TYPE="text/css" HREF="../../../../../stylesheet.css" TITLE="Style">
</HEAD>
<SCRIPT>
function asd()
{
parent.document.title="KDTree";
}
</SCRIPT>
<BODY BGCOLOR="white" onload="asd();">

<!-- ========== START OF NAVBAR ========== -->
<A NAME="navbar_top"><!-- --></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0">
<TR>
<TD COLSPAN=3 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_top_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../overview-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
</EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;PREV CLASS&nbsp;
&nbsp;<A HREF="../../../../../edu/wlu/cs/levy/CG/KeyDuplicateException.html"><B>NEXT CLASS</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../../../../../index.html" TARGET="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="KDTree.html" TARGET="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;
<SCRIPT>
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../../../../allclasses-noframe.html" TARGET=""><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
<A HREF="../../../../../allclasses-noframe.html" TARGET=""><B>All Classes</B></A>
</NOSCRIPT>
</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<!-- =========== END OF NAVBAR =========== -->

<HR>
<!-- ======== START OF CLASS DATA ======== -->
<H2>
<FONT SIZE="-1">
edu.wlu.cs.levy.CG</FONT>
<BR>
Class KDTree</H2>
<PRE>
java.lang.Object
  |
  +--<B>edu.wlu.cs.levy.CG.KDTree</B>
</PRE>
<HR>
<DL>
<DT>public class <B>KDTree</B><DT>extends java.lang.Object</DL>

<P>
KDTree is a class supporting KD-tree insertion, deletion, equality
 search, range search, and nearest neighbor(s) using double-precision
 floating-point keys.  Splitting dimension is chosen naively, by
 depth modulo K.  Semantics are as follows:

 <UL>
 <LI> Two different keys containing identical numbers should retrieve the 
      same value from a given KD-tree.  Therefore keys are cloned when a 
      node is inserted.
 <BR><BR>
 <LI> As with Hashtables, values inserted into a KD-tree are <I>not</I>
      cloned.  Modifying a value between insertion and retrieval will
      therefore modify the value stored in the tree.
</UL>
<P>

<P>
<DL>
<DT><B>Since:</B></DT>
  <DD>JDK1.2</DD>
</DL>
<HR>

<P>
<!-- ======== NESTED CLASS SUMMARY ======== -->


<!-- =========== FIELD SUMMARY =========== -->


<!-- ======== CONSTRUCTOR SUMMARY ======== -->

<A NAME="constructor_summary"><!-- --></A>
<TABLE BORDER="1" CELLPADDING="3" CELLSPACING="0" WIDTH="100%">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TD COLSPAN=2><FONT SIZE="+2">
<B>Constructor Summary</B></FONT></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><B><A HREF="../../../../../edu/wlu/cs/levy/CG/KDTree.html#KDTree(int)">KDTree</A></B>(int&nbsp;k)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Creates a KD-tree with specified number of dimensions.</TD>
</TR>
</TABLE>
&nbsp;
<!-- ========== METHOD SUMMARY =========== -->

<A NAME="method_summary"><!-- --></A>
<TABLE BORDER="1" CELLPADDING="3" CELLSPACING="0" WIDTH="100%">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TD COLSPAN=2><FONT SIZE="+2">
<B>Method Summary</B></FONT></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../edu/wlu/cs/levy/CG/KDTree.html#delete(double[])">delete</A></B>(double[]&nbsp;key)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Delete a node from a KD-tree.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../edu/wlu/cs/levy/CG/KDTree.html#insert(double[], java.lang.Object)">insert</A></B>(double[]&nbsp;key,
       java.lang.Object&nbsp;value)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Insert a node in a KD-tree.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.Object</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../edu/wlu/cs/levy/CG/KDTree.html#nearest(double[])">nearest</A></B>(double[]&nbsp;key)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Find KD-tree node whose key is nearest neighbor to
 key.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.Object[]</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../edu/wlu/cs/levy/CG/KDTree.html#nearest(double[], int)">nearest</A></B>(double[]&nbsp;key,
        int&nbsp;n)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Find KD-tree nodes whose keys are <I>n</I> nearest neighbors to
 key.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.Object[]</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../edu/wlu/cs/levy/CG/KDTree.html#range(double[], double[])">range</A></B>(double[]&nbsp;lowk,
      double[]&nbsp;uppk)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Range search in a KD-tree.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.Object</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../edu/wlu/cs/levy/CG/KDTree.html#search(double[])">search</A></B>(double[]&nbsp;key)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Find  KD-tree node whose key is identical to key.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../edu/wlu/cs/levy/CG/KDTree.html#toString()">toString</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_java.lang.Object"><!-- --></A>
<TABLE BORDER="1" CELLPADDING="3" CELLSPACING="0" WIDTH="100%">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TD><B>Methods inherited from class java.lang.Object</B></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE>equals, getClass, hashCode, notify, notifyAll, wait, wait, wait</CODE></TD>
</TR>
</TABLE>
&nbsp;
<P>

<!-- ============ FIELD DETAIL =========== -->


<!-- ========= CONSTRUCTOR DETAIL ======== -->

<A NAME="constructor_detail"><!-- --></A>
<TABLE BORDER="1" CELLPADDING="3" CELLSPACING="0" WIDTH="100%">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TD COLSPAN=1><FONT SIZE="+2">
<B>Constructor Detail</B></FONT></TD>
</TR>
</TABLE>

<A NAME="KDTree(int)"><!-- --></A><H3>
KDTree</H3>
<PRE>
public <B>KDTree</B>(int&nbsp;k)</PRE>
<DL>
<DD>Creates a KD-tree with specified number of dimensions.
<P>
<DT><B>Parameters:</B><DD><CODE>k</CODE> - number of dimensions</DL>

<!-- ============ METHOD DETAIL ========== -->

<A NAME="method_detail"><!-- --></A>
<TABLE BORDER="1" CELLPADDING="3" CELLSPACING="0" WIDTH="100%">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TD COLSPAN=1><FONT SIZE="+2">
<B>Method Detail</B></FONT></TD>
</TR>
</TABLE>

<A NAME="insert(double[], java.lang.Object)"><!-- --></A><H3>
insert</H3>
<PRE>
public void <B>insert</B>(double[]&nbsp;key,
                   java.lang.Object&nbsp;value)
            throws <A HREF="../../../../../edu/wlu/cs/levy/CG/KeySizeException.html">KeySizeException</A>,
                   <A HREF="../../../../../edu/wlu/cs/levy/CG/KeyDuplicateException.html">KeyDuplicateException</A></PRE>
<DL>
<DD>Insert a node in a KD-tree.  Uses algorithm translated from 352.ins.c of

   <PRE>
   &#064;Book{GonnetBaezaYates1991,                                   
     author =    {G.H. Gonnet and R. Baeza-Yates},
     title =     {Handbook of Algorithms and Data Structures},
     publisher = {Addison-Wesley},
     year =      {1991}
   }
   </PRE>
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>key</CODE> - key for KD-tree node<DD><CODE>value</CODE> - value at that key
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../../edu/wlu/cs/levy/CG/KeySizeException.html">KeySizeException</A></CODE> - if key.length mismatches K
<DD><CODE><A HREF="../../../../../edu/wlu/cs/levy/CG/KeyDuplicateException.html">KeyDuplicateException</A></CODE> - if key already in tree</DL>
</DD>
</DL>
<HR>

<A NAME="search(double[])"><!-- --></A><H3>
search</H3>
<PRE>
public java.lang.Object <B>search</B>(double[]&nbsp;key)
                        throws <A HREF="../../../../../edu/wlu/cs/levy/CG/KeySizeException.html">KeySizeException</A></PRE>
<DL>
<DD>Find  KD-tree node whose key is identical to key.  Uses algorithm 
 translated from 352.srch.c of Gonnet & Baeza-Yates.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>key</CODE> - key for KD-tree node
<DT><B>Returns:</B><DD>object at key, or null if not found
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../../edu/wlu/cs/levy/CG/KeySizeException.html">KeySizeException</A></CODE> - if key.length mismatches K</DL>
</DD>
</DL>
<HR>

<A NAME="delete(double[])"><!-- --></A><H3>
delete</H3>
<PRE>
public void <B>delete</B>(double[]&nbsp;key)
            throws <A HREF="../../../../../edu/wlu/cs/levy/CG/KeySizeException.html">KeySizeException</A>,
                   edu.wlu.cs.levy.CG.KeyMissingException</PRE>
<DL>
<DD>Delete a node from a KD-tree.  Instead of actually deleting node and
 rebuilding tree, marks node as deleted.  Hence, it is up to the caller
 to rebuild the tree as needed for efficiency.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>key</CODE> - key for KD-tree node
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../../edu/wlu/cs/levy/CG/KeySizeException.html">KeySizeException</A></CODE> - if key.length mismatches K
<DD><CODE>KeyMissingException</CODE> - if no node in tree has key</DL>
</DD>
</DL>
<HR>

<A NAME="nearest(double[])"><!-- --></A><H3>
nearest</H3>
<PRE>
public java.lang.Object <B>nearest</B>(double[]&nbsp;key)
                         throws <A HREF="../../../../../edu/wlu/cs/levy/CG/KeySizeException.html">KeySizeException</A></PRE>
<DL>
<DD>Find KD-tree node whose key is nearest neighbor to
 key. Implements the Nearest Neighbor algorithm (Table 6.4) of

 <PRE>
 &#064;techreport{AndrewMooreNearestNeighbor,
   author  = {Andrew Moore},
   title   = {An introductory tutorial on kd-trees},
   institution = {Robotics Institute, Carnegie Mellon University},
   year    = {1991},
   number  = {Technical Report No. 209, Computer Laboratory, 
              University of Cambridge},
   address = {Pittsburgh, PA}
 }
 </PRE>
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>key</CODE> - key for KD-tree node
<DT><B>Returns:</B><DD>object at node nearest to key, or null on failure
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../../edu/wlu/cs/levy/CG/KeySizeException.html">KeySizeException</A></CODE> - if key.length mismatches K</DL>
</DD>
</DL>
<HR>

<A NAME="nearest(double[], int)"><!-- --></A><H3>
nearest</H3>
<PRE>
public java.lang.Object[] <B>nearest</B>(double[]&nbsp;key,
                                  int&nbsp;n)
                           throws <A HREF="../../../../../edu/wlu/cs/levy/CG/KeySizeException.html">KeySizeException</A>,
                                  java.lang.IllegalArgumentException</PRE>
<DL>
<DD>Find KD-tree nodes whose keys are <I>n</I> nearest neighbors to
 key. Uses algorithm above.  Neighbors are returned in ascending
 order of distance to key.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>key</CODE> - key for KD-tree node<DD><CODE>n</CODE> - how many neighbors to find
<DT><B>Returns:</B><DD>objects at node nearest to key, or null on failure
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../../edu/wlu/cs/levy/CG/KeySizeException.html">KeySizeException</A></CODE> - if key.length mismatches K
<DD><CODE>java.lang.IllegalArgumentException</CODE> - if <I>n</I> is negative or
 exceeds tree size</DL>
</DD>
</DL>
<HR>

<A NAME="range(double[], double[])"><!-- --></A><H3>
range</H3>
<PRE>
public java.lang.Object[] <B>range</B>(double[]&nbsp;lowk,
                                double[]&nbsp;uppk)
                         throws <A HREF="../../../../../edu/wlu/cs/levy/CG/KeySizeException.html">KeySizeException</A></PRE>
<DL>
<DD>Range search in a KD-tree.  Uses algorithm translated from
 352.range.c of Gonnet & Baeza-Yates.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>lowk</CODE> - lower-bounds for key<DD><CODE>uppk</CODE> - upper-bounds for key
<DT><B>Returns:</B><DD>array of Objects whose keys fall in range [lowk,uppk]
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../../edu/wlu/cs/levy/CG/KeySizeException.html">KeySizeException</A></CODE> - on mismatch among lowk.length, uppk.length, or K</DL>
</DD>
</DL>
<HR>

<A NAME="toString()"><!-- --></A><H3>
toString</H3>
<PRE>
public java.lang.String <B>toString</B>()</PRE>
<DL>
<DD><DL>
<DT><B>Overrides:</B><DD><CODE>toString</CODE> in class <CODE>java.lang.Object</CODE></DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<!-- ========= END OF CLASS DATA ========= -->
<HR>

<!-- ========== START OF NAVBAR ========== -->
<A NAME="navbar_bottom"><!-- --></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0">
<TR>
<TD COLSPAN=3 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_bottom_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../overview-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
</EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;PREV CLASS&nbsp;
&nbsp;<A HREF="../../../../../edu/wlu/cs/levy/CG/KeyDuplicateException.html"><B>NEXT CLASS</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../../../../../index.html" TARGET="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="KDTree.html" TARGET="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;
<SCRIPT>
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../../../../allclasses-noframe.html" TARGET=""><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
<A HREF="../../../../../allclasses-noframe.html" TARGET=""><B>All Classes</B></A>
</NOSCRIPT>
</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<!-- =========== END OF NAVBAR =========== -->

<HR>

</BODY>
</HTML>
